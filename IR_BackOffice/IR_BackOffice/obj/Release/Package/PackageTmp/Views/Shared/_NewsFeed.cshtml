@using IR_BackOffice.Models

<div id="divLatestNews2" style="overflow-y: auto; background-color: white;" class="scroll">
    @{
        var db = new IR_BackOffice.Infrastructure.IR_Database();

        try
        {
            var items = db.NewsItems.OrderByDescending(u => u.DateAdded).Where(u => u.IsLive).Take(10);

            if (!items.Any())
            {
        <div style="background-color: #8bb839; padding: 10px 10px 10px 10px;">
            <span style="font-family: Gotham-Medium; color: black;">There are no news items to display.</span>
        </div>  
            }
            else
            {
                int index = 1;
                int itemCount = items.Count();

                foreach (var item in items)
                {
                    <div style="background-color: #8bb839; line-height: 20px; padding: 5px 10px 5px 10px">
                        <span style="font-family: Gotham-Medium">@item.DateAdded.ToLongDateString()</span><br />
                        

                        <span style="font-family: Gotham-Bold; color: white;">@Html.ActionLink(@item.Title.ToUpper(), "NewsItem", "Home", new { id = item.Id }, new {@style="font-family: Gotham-Bold; color: white;"})</span><br />
                        

                        <span>@item.ShortText</span>
                    </div>

                    if (index != itemCount)
                    {
                        <div style="background-color: white; height: 2px;">
                        </div>
                    }
                    
                    index++;
                }
            }
        }
        catch (Exception e)
        {
            Console.Out.WriteLine("Error: " + e.Message);
            
        <div style="background-color: #8bb839; padding: 10px 10px 10px 10px;">
            <span style="font-family: Gotham-Medium; color: black;">Error loading new. Please try again later.</span>
        </div>  
        }
    }

</div>
